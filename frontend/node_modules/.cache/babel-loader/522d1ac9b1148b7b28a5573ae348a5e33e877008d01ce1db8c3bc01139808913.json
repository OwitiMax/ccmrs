{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\CCRMS\\\\CCRMS_ORIGINAL\\\\ccmrs\\\\src\\\\template.js\";\nimport React, { useEffect, useRef } from 'react';\nimport * as ee from '@google/earthengine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = useRef(null);\n  }\n  componentDidMount() {\n    ee.initialize({\n      accessToken: 'YOUR_ACCESS_TOKEN'\n    });\n\n    // Create a map instance\n    this.map = new ee.Map(this.mapRef.current, {\n      center: [37.7749, -122.4194],\n      // Initial center (San Francisco)\n      zoom: 8\n    });\n\n    // Load your greenhouse gas data (replace with your actual data)\n    const greenhouseGasData = ee.ImageCollection('MODIS/MYD04_L2').filterDate('2023-01-01', '2023-12-31').select('AOT_550');\n\n    // Create a color palette\n    const colorPalette = ['blue', 'green', 'yellow', 'orange', 'red'];\n\n    // Create a visualization parameters object\n    const visualizationParams = {\n      min: 0,\n      max: 1000,\n      // Adjust max value based on your data range\n      palette: colorPalette\n    };\n\n    // Add the data to the map\n    this.map.addLayer(greenhouseGasData, visualizationParams, 'Greenhouse Gas Concentrations');\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.mapRef,\n      style: {\n        width: '100%',\n        height: '500px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default MapComponent;","map":{"version":3,"names":["React","useEffect","useRef","ee","jsxDEV","_jsxDEV","MapComponent","Component","constructor","props","mapRef","componentDidMount","initialize","accessToken","map","Map","current","center","zoom","greenhouseGasData","ImageCollection","filterDate","select","colorPalette","visualizationParams","min","max","palette","addLayer","render","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Projects/CCRMS/CCRMS_ORIGINAL/ccmrs/src/template.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as ee from '@google/earthengine';\r\n\r\nclass MapComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mapRef = useRef(null);\r\n  }\r\n\r\n  componentDidMount() {\r\n    ee.initialize({ accessToken: 'YOUR_ACCESS_TOKEN' });\r\n\r\n    // Create a map instance\r\n    this.map = new ee.Map(this.mapRef.current, {\r\n      center: [37.7749, -122.4194], // Initial center (San Francisco)\r\n      zoom: 8,\r\n    });\r\n\r\n    // Load your greenhouse gas data (replace with your actual data)\r\n    const greenhouseGasData = ee.ImageCollection('MODIS/MYD04_L2')\r\n      .filterDate('2023-01-01', '2023-12-31')\r\n      .select('AOT_550');\r\n\r\n    // Create a color palette\r\n    const colorPalette = ['blue', 'green', 'yellow', 'orange', 'red'];\r\n\r\n    // Create a visualization parameters object\r\n    const visualizationParams = {\r\n      min: 0,\r\n      max: 1000, // Adjust max value based on your data range\r\n      palette: colorPalette,\r\n    };\r\n\r\n    // Add the data to the map\r\n    this.map.addLayer(greenhouseGasData, visualizationParams, 'Greenhouse Gas Concentrations');\r\n  }\r\n\r\n  render() {\r\n    return <div ref={this.mapRef} style={{ width: '100%', height: '500px' }} />;\r\n  }\r\n}\r\n\r\nexport default MapComponent;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,SAASN,KAAK,CAACO,SAAS,CAAC;EACzCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,MAAM,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC5B;EAEAS,iBAAiBA,CAAA,EAAG;IAClBR,EAAE,CAACS,UAAU,CAAC;MAAEC,WAAW,EAAE;IAAoB,CAAC,CAAC;;IAEnD;IACA,IAAI,CAACC,GAAG,GAAG,IAAIX,EAAE,CAACY,GAAG,CAAC,IAAI,CAACL,MAAM,CAACM,OAAO,EAAE;MACzCC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;MAAE;MAC9BC,IAAI,EAAE;IACR,CAAC,CAAC;;IAEF;IACA,MAAMC,iBAAiB,GAAGhB,EAAE,CAACiB,eAAe,CAAC,gBAAgB,CAAC,CAC3DC,UAAU,CAAC,YAAY,EAAE,YAAY,CAAC,CACtCC,MAAM,CAAC,SAAS,CAAC;;IAEpB;IACA,MAAMC,YAAY,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC;;IAEjE;IACA,MAAMC,mBAAmB,GAAG;MAC1BC,GAAG,EAAE,CAAC;MACNC,GAAG,EAAE,IAAI;MAAE;MACXC,OAAO,EAAEJ;IACX,CAAC;;IAED;IACA,IAAI,CAACT,GAAG,CAACc,QAAQ,CAACT,iBAAiB,EAAEK,mBAAmB,EAAE,+BAA+B,CAAC;EAC5F;EAEAK,MAAMA,CAAA,EAAG;IACP,oBAAOxB,OAAA;MAAKyB,GAAG,EAAE,IAAI,CAACpB,MAAO;MAACqB,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7E;AACF;AAEA,eAAe/B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}